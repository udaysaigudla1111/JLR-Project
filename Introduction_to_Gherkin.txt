Primary keywords:-

1. Feature :
The feature describes the high-level business value of a software feature
Example: "Feature: User login"
Syntax:- Feature: [Feature Name]

2. Scenario :
The Scenario outlines a specific situation or use case of the software
Each feature can have multiple Scenarios
Example: "Scenario: Successful login with valid credentials"
Syntax:- Scenario: [Scenario Description]

3. Given: Precondition
4. When: Describes the action
5. Then: result or expected outcome

----------------------------------------------------------------------------------------------
Benefits:
1. It can be understand by both technical people and non technical people
2. it boosts team work

-----------------------------------------------------------------------------------------------
Advanced gherkin syntaxes:-

1. Streamlining common steps with Background [Background]

    (i) Defines steps common to all scenarios in a feature file
    (ii) Avoids repetition and keeps scenarios concise
    (iii) Steps in Background are executed before each scenario
    Syntax:- Just after the feature Statement Write the Background followed by steps 

2. Parameterized scenarios with scenario outline [Scenario Outline]

    (i) Used for running the same scenario multiple times with different data sets
    (ii) Followed by an example section containing a table of varaibles and their values
    Syntax:- Use Scenario Outline instead of Scenario, and define variables in the scenario steps, and list the values of these variables
    under the *Examples* keywords

3. Tags @
    1. Can be assigned to Features,Scenarios,Scenario Outline

----------------------------------------------------------------------------------------
Essential Tools for working with the gherkin

Several Tools can help in Writing,Organizing and executing Gherkin scenarios as part of automated testing suites

1. Cucumber 
purpose: Executing gherkin scenarios 
supported languages : Java,Ruby,Javascript and more.

2. Spec Flow:
purpose: Executes Gherkin scenario in .NET projects

3. Behave:
purpose: Executes gherkin scenarios for python projects
support langauge: Python

-----------------------------------------------------------------------------------------------
    